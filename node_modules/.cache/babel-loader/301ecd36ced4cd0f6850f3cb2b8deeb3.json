{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _defineProperty from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/*! MIT License Â© Sindre Sorhus */\nvar isObject = function isObject(value) {\n  return value !== null && typeof value === 'object';\n};\n\nvar supportsAbortController = typeof globalThis.AbortController === 'function';\nvar supportsStreams = typeof globalThis.ReadableStream === 'function';\nvar supportsFormData = typeof globalThis.FormData === 'function';\n\nvar mergeHeaders = function mergeHeaders(source1, source2) {\n  var result = new globalThis.Headers(source1 || {});\n  var isHeadersInstance = source2 instanceof globalThis.Headers;\n  var source = new globalThis.Headers(source2 || {});\n\n  var _iterator = _createForOfIteratorHelper(source),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          key = _step$value[0],\n          value = _step$value[1];\n\n      if (isHeadersInstance && value === 'undefined' || value === undefined) {\n        result.delete(key);\n      } else {\n        result.set(key, value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return result;\n};\n\nvar deepMerge = function deepMerge() {\n  var returnValue = {};\n  var headers = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n\n    if (Array.isArray(source)) {\n      if (!Array.isArray(returnValue)) {\n        returnValue = [];\n      }\n\n      returnValue = [].concat(_toConsumableArray(returnValue), _toConsumableArray(source));\n    } else if (isObject(source)) {\n      for (var _i2 = 0, _Object$entries = Object.entries(source); _i2 < _Object$entries.length; _i2++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        if (isObject(value) && key in returnValue) {\n          value = deepMerge(returnValue[key], value);\n        }\n\n        returnValue = _objectSpread(_objectSpread({}, returnValue), {}, _defineProperty({}, key, value));\n      }\n\n      if (isObject(source.headers)) {\n        headers = mergeHeaders(headers, source.headers);\n      }\n    }\n\n    returnValue.headers = headers;\n  }\n\n  return returnValue;\n};\n\nvar requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nvar responseTypes = {\n  json: 'application/json',\n  text: 'text/*',\n  formData: 'multipart/form-data',\n  arrayBuffer: '*/*',\n  blob: '*/*'\n};\nvar retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\nvar retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\nvar retryAfterStatusCodes = [413, 429, 503];\nvar stop = Symbol('stop');\n\nvar HTTPError = /*#__PURE__*/function (_Error) {\n  _inherits(HTTPError, _Error);\n\n  var _super = _createSuper(HTTPError);\n\n  function HTTPError(response, request, options) {\n    var _this;\n\n    _classCallCheck(this, HTTPError);\n\n    // Set the message to the status text, such as Unauthorized,\n    // with some fallbacks. This message should never be undefined.\n    _this = _super.call(this, response.statusText || String(response.status === 0 || response.status ? response.status : 'Unknown response error'));\n    _this.name = 'HTTPError';\n    _this.response = response;\n    _this.request = request;\n    _this.options = options;\n    return _this;\n  }\n\n  return HTTPError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar TimeoutError = /*#__PURE__*/function (_Error2) {\n  _inherits(TimeoutError, _Error2);\n\n  var _super2 = _createSuper(TimeoutError);\n\n  function TimeoutError(request) {\n    var _this2;\n\n    _classCallCheck(this, TimeoutError);\n\n    _this2 = _super2.call(this, 'Request timed out');\n    _this2.name = 'TimeoutError';\n    _this2.request = request;\n    return _this2;\n  }\n\n  return TimeoutError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar delay = function delay(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}; // `Promise.race()` workaround (#91)\n\n\nvar timeout = function timeout(request, abortController, options) {\n  return new Promise(function (resolve, reject) {\n    var timeoutID = setTimeout(function () {\n      if (abortController) {\n        abortController.abort();\n      }\n\n      reject(new TimeoutError(request));\n    }, options.timeout);\n    /* eslint-disable promise/prefer-await-to-then */\n\n    options.fetch(request).then(resolve).catch(reject).then(function () {\n      clearTimeout(timeoutID);\n    });\n    /* eslint-enable promise/prefer-await-to-then */\n  });\n};\n\nvar normalizeRequestMethod = function normalizeRequestMethod(input) {\n  return requestMethods.includes(input) ? input.toUpperCase() : input;\n};\n\nvar defaultRetryOptions = {\n  limit: 2,\n  methods: retryMethods,\n  statusCodes: retryStatusCodes,\n  afterStatusCodes: retryAfterStatusCodes\n};\n\nvar normalizeRetryOptions = function normalizeRetryOptions() {\n  var retry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (typeof retry === 'number') {\n    return _objectSpread(_objectSpread({}, defaultRetryOptions), {}, {\n      limit: retry\n    });\n  }\n\n  if (retry.methods && !Array.isArray(retry.methods)) {\n    throw new Error('retry.methods must be an array');\n  }\n\n  if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n    throw new Error('retry.statusCodes must be an array');\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread({}, defaultRetryOptions), retry), {}, {\n    afterStatusCodes: retryAfterStatusCodes\n  });\n}; // The maximum value of a 32bit int (see issue #117)\n\n\nvar maxSafeTimeout = 2147483647;\n\nvar Ky = /*#__PURE__*/function () {\n  function Ky(input) {\n    var _this3 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Ky);\n\n    this._retryCount = 0;\n    this._input = input;\n    this._options = _objectSpread(_objectSpread({\n      // TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n      credentials: this._input.credentials || 'same-origin'\n    }, options), {}, {\n      headers: mergeHeaders(this._input.headers, options.headers),\n      hooks: deepMerge({\n        beforeRequest: [],\n        beforeRetry: [],\n        afterResponse: []\n      }, options.hooks),\n      method: normalizeRequestMethod(options.method || this._input.method),\n      prefixUrl: String(options.prefixUrl || ''),\n      retry: normalizeRetryOptions(options.retry),\n      throwHttpErrors: options.throwHttpErrors !== false,\n      timeout: typeof options.timeout === 'undefined' ? 10000 : options.timeout,\n      fetch: options.fetch || globalThis.fetch.bind(globalThis)\n    });\n\n    if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n      throw new TypeError('`input` must be a string, URL, or Request');\n    }\n\n    if (this._options.prefixUrl && typeof this._input === 'string') {\n      if (this._input.startsWith('/')) {\n        throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n      }\n\n      if (!this._options.prefixUrl.endsWith('/')) {\n        this._options.prefixUrl += '/';\n      }\n\n      this._input = this._options.prefixUrl + this._input;\n    }\n\n    if (supportsAbortController) {\n      this.abortController = new globalThis.AbortController();\n\n      if (this._options.signal) {\n        this._options.signal.addEventListener('abort', function () {\n          _this3.abortController.abort();\n        });\n      }\n\n      this._options.signal = this.abortController.signal;\n    }\n\n    this.request = new globalThis.Request(this._input, this._options);\n\n    if (this._options.searchParams) {\n      var textSearchParams = typeof this._options.searchParams === 'string' ? this._options.searchParams.replace(/^\\?/, '') : new URLSearchParams(this._options.searchParams).toString();\n      var searchParams = '?' + textSearchParams;\n      var url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams); // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\n      if ((supportsFormData && this._options.body instanceof globalThis.FormData || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n        this.request.headers.delete('content-type');\n      }\n\n      this.request = new globalThis.Request(new globalThis.Request(url, this.request), this._options);\n    }\n\n    if (this._options.json !== undefined) {\n      this._options.body = JSON.stringify(this._options.json);\n      this.request.headers.set('content-type', 'application/json');\n      this.request = new globalThis.Request(this.request, {\n        body: this._options.body\n      });\n    }\n\n    var fn = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, _iterator2, _step2, hook, modifiedResponse;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_this3._options.timeout > maxSafeTimeout)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new RangeError(\"The `timeout` option cannot be greater than \".concat(maxSafeTimeout));\n\n              case 2:\n                _context.next = 4;\n                return delay(1);\n\n              case 4:\n                _context.next = 6;\n                return _this3._fetch();\n\n              case 6:\n                response = _context.sent;\n                _iterator2 = _createForOfIteratorHelper(_this3._options.hooks.afterResponse);\n                _context.prev = 8;\n\n                _iterator2.s();\n\n              case 10:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context.next = 18;\n                  break;\n                }\n\n                hook = _step2.value;\n                _context.next = 14;\n                return hook(_this3.request, _this3._options, _this3._decorateResponse(response.clone()));\n\n              case 14:\n                modifiedResponse = _context.sent;\n\n                if (modifiedResponse instanceof globalThis.Response) {\n                  response = modifiedResponse;\n                }\n\n              case 16:\n                _context.next = 10;\n                break;\n\n              case 18:\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](8);\n\n                _iterator2.e(_context.t0);\n\n              case 23:\n                _context.prev = 23;\n\n                _iterator2.f();\n\n                return _context.finish(23);\n\n              case 26:\n                _this3._decorateResponse(response);\n\n                if (!(!response.ok && _this3._options.throwHttpErrors)) {\n                  _context.next = 29;\n                  break;\n                }\n\n                throw new HTTPError(response, _this3.request, _this3._options);\n\n              case 29:\n                if (!_this3._options.onDownloadProgress) {\n                  _context.next = 35;\n                  break;\n                }\n\n                if (!(typeof _this3._options.onDownloadProgress !== 'function')) {\n                  _context.next = 32;\n                  break;\n                }\n\n                throw new TypeError('The `onDownloadProgress` option must be a function');\n\n              case 32:\n                if (supportsStreams) {\n                  _context.next = 34;\n                  break;\n                }\n\n                throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\n              case 34:\n                return _context.abrupt(\"return\", _this3._stream(response.clone(), _this3._options.onDownloadProgress));\n\n              case 35:\n                return _context.abrupt(\"return\", response);\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[8, 20, 23, 26]]);\n      }));\n\n      return function fn() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var isRetriableMethod = this._options.retry.methods.includes(this.request.method.toLowerCase());\n\n    var result = isRetriableMethod ? this._retry(fn) : fn();\n\n    var _loop = function _loop() {\n      var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i3], 2),\n          type = _Object$entries2$_i[0],\n          mimeType = _Object$entries2$_i[1];\n\n      result[type] = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this3.request.headers.set('accept', _this3.request.headers.get('accept') || mimeType);\n\n                _context2.next = 3;\n                return result;\n\n              case 3:\n                response = _context2.sent.clone();\n\n                if (!(type === 'json')) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                if (!(response.status === 204)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", '');\n\n              case 7:\n                if (!options.parseJson) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.t0 = options;\n                _context2.next = 11;\n                return response.text();\n\n              case 11:\n                _context2.t1 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0.parseJson.call(_context2.t0, _context2.t1));\n\n              case 13:\n                return _context2.abrupt(\"return\", response[type]());\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    };\n\n    for (var _i3 = 0, _Object$entries2 = Object.entries(responseTypes); _i3 < _Object$entries2.length; _i3++) {\n      _loop();\n    }\n\n    return result;\n  }\n\n  _createClass(Ky, [{\n    key: \"_calculateRetryDelay\",\n    value: function _calculateRetryDelay(error) {\n      this._retryCount++;\n\n      if (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n        if (error instanceof HTTPError) {\n          if (!this._options.retry.statusCodes.includes(error.response.status)) {\n            return 0;\n          }\n\n          var retryAfter = error.response.headers.get('Retry-After');\n\n          if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n            var after = Number(retryAfter);\n\n            if (Number.isNaN(after)) {\n              after = Date.parse(retryAfter) - Date.now();\n            } else {\n              after *= 1000;\n            }\n\n            if (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n              return 0;\n            }\n\n            return after;\n          }\n\n          if (error.response.status === 413) {\n            return 0;\n          }\n        }\n\n        var BACKOFF_FACTOR = 0.3;\n        return BACKOFF_FACTOR * Math.pow(2, this._retryCount - 1) * 1000;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_decorateResponse\",\n    value: function _decorateResponse(response) {\n      var _this4 = this;\n\n      if (this._options.parseJson) {\n        response.json = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.t0 = _this4._options;\n                  _context3.next = 3;\n                  return response.text();\n\n                case 3:\n                  _context3.t1 = _context3.sent;\n                  return _context3.abrupt(\"return\", _context3.t0.parseJson.call(_context3.t0, _context3.t1));\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_retry\",\n    value: function () {\n      var _retry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(fn) {\n        var ms, _iterator3, _step3, hook, hookResult;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return fn();\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                ms = Math.min(this._calculateRetryDelay(_context4.t0), maxSafeTimeout);\n\n                if (!(ms !== 0 && this._retryCount > 0)) {\n                  _context4.next = 33;\n                  break;\n                }\n\n                _context4.next = 12;\n                return delay(ms);\n\n              case 12:\n                _iterator3 = _createForOfIteratorHelper(this._options.hooks.beforeRetry);\n                _context4.prev = 13;\n\n                _iterator3.s();\n\n              case 15:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                hook = _step3.value;\n                _context4.next = 19;\n                return hook({\n                  request: this.request,\n                  options: this._options,\n                  error: _context4.t0,\n                  retryCount: this._retryCount\n                });\n\n              case 19:\n                hookResult = _context4.sent;\n\n                if (!(hookResult === stop)) {\n                  _context4.next = 22;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 22:\n                _context4.next = 15;\n                break;\n\n              case 24:\n                _context4.next = 29;\n                break;\n\n              case 26:\n                _context4.prev = 26;\n                _context4.t1 = _context4[\"catch\"](13);\n\n                _iterator3.e(_context4.t1);\n\n              case 29:\n                _context4.prev = 29;\n\n                _iterator3.f();\n\n                return _context4.finish(29);\n\n              case 32:\n                return _context4.abrupt(\"return\", this._retry(fn));\n\n              case 33:\n                if (!this._options.throwHttpErrors) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                throw _context4.t0;\n\n              case 35:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 6], [13, 26, 29, 32]]);\n      }));\n\n      function _retry(_x) {\n        return _retry2.apply(this, arguments);\n      }\n\n      return _retry;\n    }()\n  }, {\n    key: \"_fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _iterator4, _step4, hook, result;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _iterator4 = _createForOfIteratorHelper(this._options.hooks.beforeRequest);\n                _context5.prev = 1;\n\n                _iterator4.s();\n\n              case 3:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context5.next = 15;\n                  break;\n                }\n\n                hook = _step4.value;\n                _context5.next = 7;\n                return hook(this.request, this._options);\n\n              case 7:\n                result = _context5.sent;\n\n                if (!(result instanceof Request)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                this.request = result;\n                return _context5.abrupt(\"break\", 15);\n\n              case 11:\n                if (!(result instanceof Response)) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", result);\n\n              case 13:\n                _context5.next = 3;\n                break;\n\n              case 15:\n                _context5.next = 20;\n                break;\n\n              case 17:\n                _context5.prev = 17;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                _iterator4.e(_context5.t0);\n\n              case 20:\n                _context5.prev = 20;\n\n                _iterator4.f();\n\n                return _context5.finish(20);\n\n              case 23:\n                if (!(this._options.timeout === false)) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", this._options.fetch(this.request.clone()));\n\n              case 25:\n                return _context5.abrupt(\"return\", timeout(this.request.clone(), this.abortController, this._options));\n\n              case 26:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 17, 20, 23]]);\n      }));\n\n      function _fetch() {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return _fetch;\n    }()\n    /* istanbul ignore next */\n\n  }, {\n    key: \"_stream\",\n    value: function _stream(response, onDownloadProgress) {\n      var totalBytes = Number(response.headers.get('content-length')) || 0;\n      var transferredBytes = 0;\n      return new globalThis.Response(new globalThis.ReadableStream({\n        start: function start(controller) {\n          return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n            var reader, read, _read;\n\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _read = function _read3() {\n                      _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                        var _yield$reader$read, done, value, percent;\n\n                        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                _context6.next = 2;\n                                return reader.read();\n\n                              case 2:\n                                _yield$reader$read = _context6.sent;\n                                done = _yield$reader$read.done;\n                                value = _yield$reader$read.value;\n\n                                if (!done) {\n                                  _context6.next = 8;\n                                  break;\n                                }\n\n                                controller.close();\n                                return _context6.abrupt(\"return\");\n\n                              case 8:\n                                if (onDownloadProgress) {\n                                  transferredBytes += value.byteLength;\n                                  percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                                  onDownloadProgress({\n                                    percent: percent,\n                                    transferredBytes: transferredBytes,\n                                    totalBytes: totalBytes\n                                  }, value);\n                                }\n\n                                controller.enqueue(value);\n                                _context6.next = 12;\n                                return read();\n\n                              case 12:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, _callee6);\n                      }));\n                      return _read.apply(this, arguments);\n                    };\n\n                    read = function _read2() {\n                      return _read.apply(this, arguments);\n                    };\n\n                    reader = response.body.getReader();\n\n                    if (onDownloadProgress) {\n                      onDownloadProgress({\n                        percent: 0,\n                        transferredBytes: 0,\n                        totalBytes: totalBytes\n                      }, new Uint8Array());\n                    }\n\n                    _context7.next = 6;\n                    return read();\n\n                  case 6:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }))();\n        }\n      }));\n    }\n  }]);\n\n  return Ky;\n}();\n\nvar validateAndMerge = function validateAndMerge() {\n  for (var _len2 = arguments.length, sources = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    sources[_key2] = arguments[_key2];\n  }\n\n  for (var _i4 = 0, _sources2 = sources; _i4 < _sources2.length; _i4++) {\n    var source = _sources2[_i4];\n\n    if ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n      throw new TypeError('The `options` argument must be an object');\n    }\n  }\n\n  return deepMerge.apply(void 0, [{}].concat(sources));\n};\n\nvar createInstance = function createInstance(defaults) {\n  var ky = function ky(input, options) {\n    return new Ky(input, validateAndMerge(defaults, options));\n  };\n\n  var _iterator5 = _createForOfIteratorHelper(requestMethods),\n      _step5;\n\n  try {\n    var _loop2 = function _loop2() {\n      var method = _step5.value;\n\n      ky[method] = function (input, options) {\n        return new Ky(input, validateAndMerge(defaults, options, {\n          method: method\n        }));\n      };\n    };\n\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      _loop2();\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  ky.HTTPError = HTTPError;\n  ky.TimeoutError = TimeoutError;\n\n  ky.create = function (newDefaults) {\n    return createInstance(validateAndMerge(newDefaults));\n  };\n\n  ky.extend = function (newDefaults) {\n    return createInstance(validateAndMerge(defaults, newDefaults));\n  };\n\n  ky.stop = stop;\n  return ky;\n};\n\nvar ky = createInstance();\nexport default ky;","map":{"version":3,"sources":["/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/ky/index.js"],"names":["isObject","value","supportsAbortController","globalThis","AbortController","supportsStreams","ReadableStream","supportsFormData","FormData","mergeHeaders","source1","source2","result","Headers","isHeadersInstance","source","key","undefined","delete","set","deepMerge","returnValue","headers","sources","Array","isArray","Object","entries","requestMethods","responseTypes","json","text","formData","arrayBuffer","blob","retryMethods","retryStatusCodes","retryAfterStatusCodes","stop","Symbol","HTTPError","response","request","options","statusText","String","status","name","Error","TimeoutError","delay","ms","Promise","resolve","setTimeout","timeout","abortController","reject","timeoutID","abort","fetch","then","catch","clearTimeout","normalizeRequestMethod","input","includes","toUpperCase","defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","normalizeRetryOptions","retry","maxSafeTimeout","Ky","_retryCount","_input","_options","credentials","hooks","beforeRequest","beforeRetry","afterResponse","method","prefixUrl","throwHttpErrors","bind","URL","Request","TypeError","startsWith","endsWith","signal","addEventListener","searchParams","textSearchParams","replace","URLSearchParams","toString","url","body","JSON","stringify","fn","RangeError","_fetch","hook","_decorateResponse","clone","modifiedResponse","Response","ok","onDownloadProgress","_stream","isRetriableMethod","toLowerCase","_retry","type","mimeType","get","parseJson","error","retryAfter","after","Number","isNaN","Date","parse","now","maxRetryAfter","BACKOFF_FACTOR","Math","min","_calculateRetryDelay","retryCount","hookResult","totalBytes","transferredBytes","start","controller","read","reader","done","close","byteLength","percent","enqueue","getReader","Uint8Array","validateAndMerge","createInstance","defaults","ky","create","newDefaults","extend"],"mappings":"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","sourcesContent":["/*! MIT License Â© Sindre Sorhus */\n\nconst isObject = value => value !== null && typeof value === 'object';\nconst supportsAbortController = typeof globalThis.AbortController === 'function';\nconst supportsStreams = typeof globalThis.ReadableStream === 'function';\nconst supportsFormData = typeof globalThis.FormData === 'function';\n\nconst mergeHeaders = (source1, source2) => {\n\tconst result = new globalThis.Headers(source1 || {});\n\tconst isHeadersInstance = source2 instanceof globalThis.Headers;\n\tconst source = new globalThis.Headers(source2 || {});\n\n\tfor (const [key, value] of source) {\n\t\tif ((isHeadersInstance && value === 'undefined') || value === undefined) {\n\t\t\tresult.delete(key);\n\t\t} else {\n\t\t\tresult.set(key, value);\n\t\t}\n\t}\n\n\treturn result;\n};\n\nconst deepMerge = (...sources) => {\n\tlet returnValue = {};\n\tlet headers = {};\n\n\tfor (const source of sources) {\n\t\tif (Array.isArray(source)) {\n\t\t\tif (!(Array.isArray(returnValue))) {\n\t\t\t\treturnValue = [];\n\t\t\t}\n\n\t\t\treturnValue = [...returnValue, ...source];\n\t\t} else if (isObject(source)) {\n\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\tif (isObject(value) && (key in returnValue)) {\n\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t}\n\n\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t}\n\n\t\t\tif (isObject(source.headers)) {\n\t\t\t\theaders = mergeHeaders(headers, source.headers);\n\t\t\t}\n\t\t}\n\n\t\treturnValue.headers = headers;\n\t}\n\n\treturn returnValue;\n};\n\nconst requestMethods = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nconst responseTypes = {\n\tjson: 'application/json',\n\ttext: 'text/*',\n\tformData: 'multipart/form-data',\n\tarrayBuffer: '*/*',\n\tblob: '*/*'\n};\n\nconst retryMethods = [\n\t'get',\n\t'put',\n\t'head',\n\t'delete',\n\t'options',\n\t'trace'\n];\n\nconst retryStatusCodes = [\n\t408,\n\t413,\n\t429,\n\t500,\n\t502,\n\t503,\n\t504\n];\n\nconst retryAfterStatusCodes = [\n\t413,\n\t429,\n\t503\n];\n\nconst stop = Symbol('stop');\n\nclass HTTPError extends Error {\n\tconstructor(response, request, options) {\n\t\t// Set the message to the status text, such as Unauthorized,\n\t\t// with some fallbacks. This message should never be undefined.\n\t\tsuper(\n\t\t\tresponse.statusText ||\n\t\t\tString(\n\t\t\t\t(response.status === 0 || response.status) ?\n\t\t\t\t\tresponse.status : 'Unknown response error'\n\t\t\t)\n\t\t);\n\t\tthis.name = 'HTTPError';\n\t\tthis.response = response;\n\t\tthis.request = request;\n\t\tthis.options = options;\n\t}\n}\n\nclass TimeoutError extends Error {\n\tconstructor(request) {\n\t\tsuper('Request timed out');\n\t\tthis.name = 'TimeoutError';\n\t\tthis.request = request;\n\t}\n}\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// `Promise.race()` workaround (#91)\nconst timeout = (request, abortController, options) =>\n\tnew Promise((resolve, reject) => {\n\t\tconst timeoutID = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\t/* eslint-disable promise/prefer-await-to-then */\n\t\toptions.fetch(request)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutID);\n\t\t\t});\n\t\t/* eslint-enable promise/prefer-await-to-then */\n\t});\n\nconst normalizeRequestMethod = input => requestMethods.includes(input) ? input.toUpperCase() : input;\n\nconst defaultRetryOptions = {\n\tlimit: 2,\n\tmethods: retryMethods,\n\tstatusCodes: retryStatusCodes,\n\tafterStatusCodes: retryAfterStatusCodes\n};\n\nconst normalizeRetryOptions = (retry = {}) => {\n\tif (typeof retry === 'number') {\n\t\treturn {\n\t\t\t...defaultRetryOptions,\n\t\t\tlimit: retry\n\t\t};\n\t}\n\n\tif (retry.methods && !Array.isArray(retry.methods)) {\n\t\tthrow new Error('retry.methods must be an array');\n\t}\n\n\tif (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n\t\tthrow new Error('retry.statusCodes must be an array');\n\t}\n\n\treturn {\n\t\t...defaultRetryOptions,\n\t\t...retry,\n\t\tafterStatusCodes: retryAfterStatusCodes\n\t};\n};\n\n// The maximum value of a 32bit int (see issue #117)\nconst maxSafeTimeout = 2147483647;\n\nclass Ky {\n\tconstructor(input, options = {}) {\n\t\tthis._retryCount = 0;\n\t\tthis._input = input;\n\t\tthis._options = {\n\t\t\t// TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n\t\t\tcredentials: this._input.credentials || 'same-origin',\n\t\t\t...options,\n\t\t\theaders: mergeHeaders(this._input.headers, options.headers),\n\t\t\thooks: deepMerge({\n\t\t\t\tbeforeRequest: [],\n\t\t\t\tbeforeRetry: [],\n\t\t\t\tafterResponse: []\n\t\t\t}, options.hooks),\n\t\t\tmethod: normalizeRequestMethod(options.method || this._input.method),\n\t\t\tprefixUrl: String(options.prefixUrl || ''),\n\t\t\tretry: normalizeRetryOptions(options.retry),\n\t\t\tthrowHttpErrors: options.throwHttpErrors !== false,\n\t\t\ttimeout: typeof options.timeout === 'undefined' ? 10000 : options.timeout,\n\t\t\tfetch: options.fetch || globalThis.fetch.bind(globalThis)\n\t\t};\n\n\t\tif (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n\t\t\tthrow new TypeError('`input` must be a string, URL, or Request');\n\t\t}\n\n\t\tif (this._options.prefixUrl && typeof this._input === 'string') {\n\t\t\tif (this._input.startsWith('/')) {\n\t\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t\t}\n\n\t\t\tif (!this._options.prefixUrl.endsWith('/')) {\n\t\t\t\tthis._options.prefixUrl += '/';\n\t\t\t}\n\n\t\t\tthis._input = this._options.prefixUrl + this._input;\n\t\t}\n\n\t\tif (supportsAbortController) {\n\t\t\tthis.abortController = new globalThis.AbortController();\n\t\t\tif (this._options.signal) {\n\t\t\t\tthis._options.signal.addEventListener('abort', () => {\n\t\t\t\t\tthis.abortController.abort();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._options.signal = this.abortController.signal;\n\t\t}\n\n\t\tthis.request = new globalThis.Request(this._input, this._options);\n\n\t\tif (this._options.searchParams) {\n\t\t\tconst textSearchParams = typeof this._options.searchParams === 'string' ?\n\t\t\t\tthis._options.searchParams.replace(/^\\?/, '') :\n\t\t\t\tnew URLSearchParams(this._options.searchParams).toString();\n\t\t\tconst searchParams = '?' + textSearchParams;\n\t\t\tconst url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n\n\t\t\t// To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\t\t\tif (((supportsFormData && this._options.body instanceof globalThis.FormData) || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n\t\t\t\tthis.request.headers.delete('content-type');\n\t\t\t}\n\n\t\t\tthis.request = new globalThis.Request(new globalThis.Request(url, this.request), this._options);\n\t\t}\n\n\t\tif (this._options.json !== undefined) {\n\t\t\tthis._options.body = JSON.stringify(this._options.json);\n\t\t\tthis.request.headers.set('content-type', 'application/json');\n\t\t\tthis.request = new globalThis.Request(this.request, {body: this._options.body});\n\t\t}\n\n\t\tconst fn = async () => {\n\t\t\tif (this._options.timeout > maxSafeTimeout) {\n\t\t\t\tthrow new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n\t\t\t}\n\n\t\t\tawait delay(1);\n\t\t\tlet response = await this._fetch();\n\n\t\t\tfor (const hook of this._options.hooks.afterResponse) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst modifiedResponse = await hook(\n\t\t\t\t\tthis.request,\n\t\t\t\t\tthis._options,\n\t\t\t\t\tthis._decorateResponse(response.clone())\n\t\t\t\t);\n\n\t\t\t\tif (modifiedResponse instanceof globalThis.Response) {\n\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._decorateResponse(response);\n\n\t\t\tif (!response.ok && this._options.throwHttpErrors) {\n\t\t\t\tthrow new HTTPError(response, this.request, this._options);\n\t\t\t}\n\n\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t/* istanbul ignore next */\n\t\t\tif (this._options.onDownloadProgress) {\n\t\t\t\tif (typeof this._options.onDownloadProgress !== 'function') {\n\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t}\n\n\t\t\t\tif (!supportsStreams) {\n\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t}\n\n\t\t\t\treturn this._stream(response.clone(), this._options.onDownloadProgress);\n\t\t\t}\n\n\t\t\treturn response;\n\t\t};\n\n\t\tconst isRetriableMethod = this._options.retry.methods.includes(this.request.method.toLowerCase());\n\t\tconst result = isRetriableMethod ? this._retry(fn) : fn();\n\n\t\tfor (const [type, mimeType] of Object.entries(responseTypes)) {\n\t\t\tresult[type] = async () => {\n\t\t\t\tthis.request.headers.set('accept', this.request.headers.get('accept') || mimeType);\n\n\t\t\t\tconst response = (await result).clone();\n\n\t\t\t\tif (type === 'json') {\n\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (options.parseJson) {\n\t\t\t\t\t\treturn options.parseJson(await response.text());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response[type]();\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t_calculateRetryDelay(error) {\n\t\tthis._retryCount++;\n\n\t\tif (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n\t\t\tif (error instanceof HTTPError) {\n\t\t\t\tif (!this._options.retry.statusCodes.includes(error.response.status)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tconst retryAfter = error.response.headers.get('Retry-After');\n\t\t\t\tif (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n\t\t\t\t\tlet after = Number(retryAfter);\n\t\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tafter *= 1000;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn after;\n\t\t\t\t}\n\n\t\t\t\tif (error.response.status === 413) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst BACKOFF_FACTOR = 0.3;\n\t\t\treturn BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t_decorateResponse(response) {\n\t\tif (this._options.parseJson) {\n\t\t\tresponse.json = async () => {\n\t\t\t\treturn this._options.parseJson(await response.text());\n\t\t\t};\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tasync _retry(fn) {\n\t\ttry {\n\t\t\treturn await fn();\n\t\t} catch (error) {\n\t\t\tconst ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n\t\t\tif (ms !== 0 && this._retryCount > 0) {\n\t\t\t\tawait delay(ms);\n\n\t\t\t\tfor (const hook of this._options.hooks.beforeRetry) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tconst hookResult = await hook({\n\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\toptions: this._options,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tretryCount: this._retryCount\n\t\t\t\t\t});\n\n\t\t\t\t\t// If `stop` is returned from the hook, the retry process is stopped\n\t\t\t\t\tif (hookResult === stop) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this._retry(fn);\n\t\t\t}\n\n\t\t\tif (this._options.throwHttpErrors) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _fetch() {\n\t\tfor (const hook of this._options.hooks.beforeRequest) {\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst result = await hook(this.request, this._options);\n\n\t\t\tif (result instanceof Request) {\n\t\t\t\tthis.request = result;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (result instanceof Response) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\tif (this._options.timeout === false) {\n\t\t\treturn this._options.fetch(this.request.clone());\n\t\t}\n\n\t\treturn timeout(this.request.clone(), this.abortController, this._options);\n\t}\n\n\t/* istanbul ignore next */\n\t_stream(response, onDownloadProgress) {\n\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\tlet transferredBytes = 0;\n\n\t\treturn new globalThis.Response(\n\t\t\tnew globalThis.ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t}\n\n\t\t\t\t\tasync function read() {\n\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\tawait read();\n\t\t\t\t\t}\n\n\t\t\t\t\tawait read();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n\nconst validateAndMerge = (...sources) => {\n\tfor (const source of sources) {\n\t\tif ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t}\n\t}\n\n\treturn deepMerge({}, ...sources);\n};\n\nconst createInstance = defaults => {\n\tconst ky = (input, options) => new Ky(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\tky[method] = (input, options) => new Ky(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.HTTPError = HTTPError;\n\tky.TimeoutError = TimeoutError;\n\tky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n\tky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n"]},"metadata":{},"sourceType":"module"}