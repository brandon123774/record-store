{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/src/pages/Records.js\",\n    _s = $RefreshSig$();\n\nimport { Text } from '@chakra-ui/react';\nimport api from 'api';\nimport { Form, Table } from 'components/records';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchRecords = async () => await api.index();\n\nfunction Records() {\n  _s();\n\n  const {\n    status,\n    data,\n    error\n  } = useQuery('records', fetchRecords);\n  const queryClient = useQueryClient();\n  const addRecord = useMutation(payload => api.create(payload));\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addRecord.mutate(Object.fromEntries(new FormData(event.target)), {\n      onSuccess: () => {\n        queryClient.invalidateQueries('records');\n      }\n    });\n  };\n\n  switch (status) {\n    case 'loading':\n      return /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n\n    case 'error':\n      return /*#__PURE__*/_jsxDEV(Text, {\n        color: \"tomato\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          records: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          handler: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n  }\n}\n\n_s(Records, \"t1r2XoQTUPLbHXI3TUZuqTVlp8o=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n\n_c = Records;\nexport default Records;\n\nvar _c;\n\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"sources":["/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/src/pages/Records.js"],"names":["Text","api","Form","Table","useMutation","useQuery","useQueryClient","fetchRecords","index","Records","status","data","error","queryClient","addRecord","payload","create","handleSubmit","event","preventDefault","mutate","Object","fromEntries","FormData","target","onSuccess","invalidateQueries","message"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,oBAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,cAAhC,QAAsD,aAAtD;;;AAEA,MAAMC,YAAY,GAAG,YAAY,MAAMN,GAAG,CAACO,KAAJ,EAAvC;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA0BP,QAAQ,CAAC,SAAD,EAAYE,YAAZ,CAAxC;AACA,QAAMM,WAAW,GAAGP,cAAc,EAAlC;AAEA,QAAMQ,SAAS,GAAGV,WAAW,CAACW,OAAO,IAAId,GAAG,CAACe,MAAJ,CAAWD,OAAX,CAAZ,CAA7B;;AAEA,QAAME,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,SAAS,CAACM,MAAV,CAAiBC,MAAM,CAACC,WAAP,CAAmB,IAAIC,QAAJ,CAAaL,KAAK,CAACM,MAAnB,CAAnB,CAAjB,EAAiE;AAC/DC,MAAAA,SAAS,EAAE,MAAM;AACfZ,QAAAA,WAAW,CAACa,iBAAZ,CAA8B,SAA9B;AACD;AAH8D,KAAjE;AAKD,GAPD;;AASA,UAAQhB,MAAR;AACE,SAAK,SAAL;AACE,0BAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAK,OAAL;AACE,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,QAAZ;AAAA,kBAAsBE,KAAK,CAACe;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,0BACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEhB;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAEM;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AANJ;AAaD;;GA5BQR,O;UACyBJ,Q,EACZC,c,EAEFF,W;;;KAJXK,O;AA8BT,eAAeA,OAAf","sourcesContent":["import { Text } from '@chakra-ui/react';\nimport api from 'api';\nimport { Form, Table } from 'components/records';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\n\nconst fetchRecords = async () => await api.index();\n\nfunction Records() {\n  const { status, data, error } = useQuery('records', fetchRecords);\n  const queryClient = useQueryClient();\n\n  const addRecord = useMutation(payload => api.create(payload));\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    addRecord.mutate(Object.fromEntries(new FormData(event.target)), {\n      onSuccess: () => {\n        queryClient.invalidateQueries('records');\n      },\n    });\n  };\n\n  switch (status) {\n    case 'loading':\n      return <Text>Loading...</Text>;\n    case 'error':\n      return <Text color=\"tomato\">{error.message}</Text>;\n    default:\n      return (\n        <main className=\"container mx-auto\">\n          <Table records={data} />\n          <Form handler={handleSubmit} />\n        </main>\n      );\n  }\n}\n\nexport default Records;\n"]},"metadata":{},"sourceType":"module"}