{"ast":null,"code":"import _defineProperty from\"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{DeleteIcon}from'@chakra-ui/icons';import{Button,Table,TableCaption,Tbody,Td,Th,Thead,Tr}from'@chakra-ui/react';import api from'api';import{useMutation,useQueryClient}from'react-query';import EditableText from'./EditableText';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RecordsTable(_ref){var records=_ref.records;var queryClient=useQueryClient();var updateRecord=useMutation(function(_ref2){var payload=_ref2.payload,id=_ref2.id;return api.update(payload,id);});var deleteRecord=useMutation(function(id){return api.delete(id);});function handleDelete(event){deleteRecord.mutate(event.target.dataset.id,{onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queryClient.invalidateQueries('records');case 1:case\"end\":return _context.stop();}}},_callee);}));function onSuccess(){return _onSuccess.apply(this,arguments);}return onSuccess;}()});}function handleUpdate(event){var updatedRecord=_objectSpread(_objectSpread({},records.find(function(_ref3){var id=_ref3.id;return id===// ⚠️ Make sure to check as a number!\nNumber(event.target.dataset.id);})),_defineProperty({},event.target.dataset.key,event.target.value));updateRecord.mutate({payload:updatedRecord,id:event.target.dataset.id});}return/*#__PURE__*/_jsxs(Table,{variant:\"simple\",children:[/*#__PURE__*/_jsx(TableCaption,{children:\"Click on any data to edit \\uD83D\\uDCDD it.\"}),/*#__PURE__*/_jsx(Thead,{children:/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Th,{children:\"Artist\"}),/*#__PURE__*/_jsx(Th,{children:\"Album\"}),/*#__PURE__*/_jsx(Th,{children:\"Year\"})]})}),/*#__PURE__*/_jsx(Tbody,{children:records.map(function(_ref4){var id=_ref4.id,artist=_ref4.artist,album=_ref4.album,year=_ref4.year;return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(EditableText,{value:artist,handler:handleUpdate,recordKey:\"artist\",id:id})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(EditableText,{value:album,handler:handleUpdate,recordKey:\"album\",id:id})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(EditableText,{value:year,handler:handleUpdate,recordKey:\"year\",id:id})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Button,{leftIcon:/*#__PURE__*/_jsx(DeleteIcon,{}),colorScheme:\"teal\",variant:\"solid\",size:\"xs\",onClick:handleDelete,\"data-id\":id,children:\"Delete \\uD83D\\uDD25\"})})]},id);})})]});}export default RecordsTable;","map":{"version":3,"sources":["/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/src/components/records/RecordsTable/index.js"],"names":["DeleteIcon","Button","Table","TableCaption","Tbody","Td","Th","Thead","Tr","api","useMutation","useQueryClient","EditableText","RecordsTable","records","queryClient","updateRecord","payload","id","update","deleteRecord","delete","handleDelete","event","mutate","target","dataset","onSuccess","invalidateQueries","handleUpdate","updatedRecord","find","Number","key","value","map","artist","album","year"],"mappings":"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","sourcesContent":["import { DeleteIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Table,\n  TableCaption,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\nimport api from 'api';\nimport PropTypes from 'prop-types';\nimport { useMutation, useQueryClient } from 'react-query';\nimport EditableText from './EditableText';\n\nfunction RecordsTable({ records }) {\n  const queryClient = useQueryClient();\n\n  const updateRecord = useMutation(({ payload, id }) =>\n    api.update(payload, id)\n  );\n\n  const deleteRecord = useMutation(id => api.delete(id));\n\n  function handleDelete(event) {\n    deleteRecord.mutate(event.target.dataset.id, {\n      onSuccess: async () => {\n        queryClient.invalidateQueries('records');\n      },\n    });\n  }\n\n  function handleUpdate(event) {\n    const updatedRecord = {\n      ...records.find(\n        ({ id }) =>\n          id ===\n          // ⚠️ Make sure to check as a number!\n          Number(event.target.dataset.id)\n      ),\n      ...{ [event.target.dataset.key]: event.target.value },\n    };\n\n    updateRecord.mutate({\n      payload: updatedRecord,\n      id: event.target.dataset.id,\n    });\n  }\n\n  return (\n    <Table variant=\"simple\">\n      <TableCaption>Click on any data to edit 📝 it.</TableCaption>\n      <Thead>\n        <Tr>\n          <Th>Artist</Th>\n          <Th>Album</Th>\n          <Th>Year</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {records.map(({ id, artist, album, year }) => (\n          <Tr key={id}>\n            <Td>\n              <EditableText\n                value={artist}\n                handler={handleUpdate}\n                recordKey=\"artist\"\n                id={id}\n              />\n            </Td>\n            <Td>\n              <EditableText\n                value={album}\n                handler={handleUpdate}\n                recordKey=\"album\"\n                id={id}\n              />\n            </Td>\n            <Td>\n              <EditableText\n                value={year}\n                handler={handleUpdate}\n                recordKey=\"year\"\n                id={id}\n              />\n            </Td>\n            <Td>\n              <Button\n                leftIcon={<DeleteIcon />}\n                colorScheme=\"teal\"\n                variant=\"solid\"\n                size=\"xs\"\n                onClick={handleDelete}\n                data-id={id}\n              >\n                Delete 🔥\n              </Button>\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  );\n}\n\nRecordsTable.propTypes = {\n  records: PropTypes.arrayOf(\n    PropTypes.exact({\n      artist: PropTypes.string.isRequired,\n      album: PropTypes.string.isRequired,\n      year: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default RecordsTable;\n"]},"metadata":{},"sourceType":"module"}