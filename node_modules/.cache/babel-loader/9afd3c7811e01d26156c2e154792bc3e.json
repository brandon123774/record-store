{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/src/components/records/RecordsTable/EditableText.js\";\nimport { Editable, EditableInput, EditablePreview } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditableText({\n  value,\n  recordKey,\n  id,\n  handler\n}) {\n  return /*#__PURE__*/_jsxDEV(Editable, {\n    defaultValue: value,\n    className: \"flex gap-2 items-center text-yellow-600\",\n    children: [/*#__PURE__*/_jsxDEV(EditablePreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditableInput, {\n      \"data-key\": recordKey,\n      \"data-id\": id,\n      onBlur: handler,\n      onChange: handler,\n      size: \"xs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EditableText;\nEditableText.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  recordKey: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired\n};\nexport default EditableText;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableText\");","map":{"version":3,"sources":["/Users/admin/Desktop/Java-React/Day 9/01-we-full-stack-record-react-front-end/solution/src/components/records/RecordsTable/EditableText.js"],"names":["Editable","EditableInput","EditablePreview","PropTypes","EditableText","value","recordKey","id","handler","propTypes","oneOfType","number","string","isRequired","func"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,eAAlC,QAAyD,kBAAzD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA,EAApB;AAAwBC,EAAAA;AAAxB,CAAtB,EAAyD;AACvD,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAEH,KADhB;AAEE,IAAA,SAAS,EAAC,yCAFZ;AAAA,4BAIE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AACE,kBAAUC,SADZ;AAEE,iBAASC,EAFX;AAGE,MAAA,MAAM,EAAEC,OAHV;AAIE,MAAA,QAAQ,EAAEA,OAJZ;AAKE,MAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAhBQJ,Y;AAkBTA,YAAY,CAACK,SAAb,GAAyB;AACvBJ,EAAAA,KAAK,EAAEF,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,MAAX,EAAmBR,SAAS,CAACS,MAA7B,CAApB,CADgB;AAEvBN,EAAAA,SAAS,EAAEH,SAAS,CAACS,MAAV,CAAiBC,UAFL;AAGvBL,EAAAA,OAAO,EAAEL,SAAS,CAACW,IAAV,CAAeD,UAHD;AAIvBN,EAAAA,EAAE,EAAEJ,SAAS,CAACQ,MAAV,CAAiBE;AAJE,CAAzB;AAOA,eAAeT,YAAf","sourcesContent":["import { Editable, EditableInput, EditablePreview } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nfunction EditableText({ value, recordKey, id, handler }) {\n  return (\n    <Editable\n      defaultValue={value}\n      className=\"flex gap-2 items-center text-yellow-600\"\n    >\n      <EditablePreview />\n      <EditableInput\n        data-key={recordKey}\n        data-id={id}\n        onBlur={handler}\n        onChange={handler}\n        size=\"xs\"\n      />\n    </Editable>\n  );\n}\n\nEditableText.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  recordKey: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default EditableText;\n"]},"metadata":{},"sourceType":"module"}